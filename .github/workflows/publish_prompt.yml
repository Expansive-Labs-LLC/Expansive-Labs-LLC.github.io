name: Publish Stable Diffusion Prompt (Simplified)

on:
  push:
    branches: [main] # Or your main branch
    paths:
      - 'src/posts/**.md' # Updated path to your blog post files

  workflow_dispatch:
    inputs:
      filepath:
        description: 'Path to the blog post Markdown file (for manual triggering)'
        required: true

jobs:
  extract_and_queue_prompt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract Prompt and Send to SQS
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          SQS_QUEUE_URL: ${{ secrets.SQS_QUEUE_URL }}
        run: |
          filepath=""

          if ${{ github.event_name == 'push' }}; then
            if ${{ github.event.commits }}; then
              for commit in ${{ github.event.commits[*] }}; do
                if ${{ commit.added }} && [[ "${commit.added[*]}" == *'src/posts/'*.md* ]]; then
                  filepath=$(echo "${commit.added[*]}" | grep 'src/posts/.*\.md' -om1)
                  break
                elif ${{ commit.modified }} && [[ "${commit.modified[*]}" == *'src/posts/'*.md* ]]; then
                  filepath=$(echo "${commit.modified[*]}" | grep 'src/posts/.*\.md' -om1)
                  break
                fi
              done
            fi
          elif ${{ github.event_name == 'workflow_dispatch' }}; then
            filepath="${{ github.event.inputs.filepath }}"
          fi

          if [[ -z "$filepath" ]]; then
            echo "No relevant blog post file found."
            exit 1
          fi

          prompt=$(sed -n '/^tags:$/,/^---$/{ /prompt: /s/.*prompt: *"\([^"]*\)"/\1/p; }' "$filepath" | head -n 1)

          # If not found in frontmatter, try extracting from comment
          if [[ -z "$prompt" ]]; then
            prompt=$(grep -oP '' "$filepath" | head -n 1)
          fi

          if [[ -n "$prompt" ]]; then
            echo "Extracted prompt: $prompt"
            aws sqs send-message \
              --queue-url "$SQS_QUEUE_URL" \
              --message-body "$(echo -n "{ \"prompt\": \"$prompt\", \"blog_filepath\": \"$filepath\" }" | jq -c)" \
              --region "${AWS_REGION}" \
              --aws-access-key-id "${AWS_ACCESS_KEY_ID}" \
              --aws-secret-access-key "${AWS_SECRET_ACCESS_KEY}"
            echo "Prompt sent to SQS for $filepath."
          else
            echo "No Stable Diffusion prompt found in $filepath"
            exit 1
          fi
